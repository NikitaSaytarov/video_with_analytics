{"version":3,"sources":["webpack:///./src/workers/eventAnalysis.worker.ts?c61c","store/analytics/analyticsSlice.ts","store/rootReducer.ts","store/getState.ts","services/fetchAllAnalyticsEvents.ts","store/sagas/fetchAnalyticsEventsSaga.ts","store/sagas/root-saga.ts","store/store.ts","views/components/theme/ThemeColors.ts","views/components/layout/eventsListPanel/style.ts","views/components/layout/eventsListPanel/index.tsx","views/components/layout/eventsVisualLayer/code/drawEventRectangle.ts","views/components/layout/eventsVisualLayer/style.ts","views/components/layout/eventsVisualLayer/index.tsx","const/url.ts","views/components/layout/eventsVisualLayer/code/extractVideoResolution.ts","views/components/layout/eventAnalysis/index.tsx","views/components/layout/playerManagement/index.tsx","views/components/layout/player/style.ts","views/components/layout/player/index.tsx","views/components/theme/themeAccessors.ts","views/components/app/style.ts","views/components/app/index.tsx","globalStyle.ts","views/components/theme/defaultAppThemeValues.ts","views/components/theme/theme.ts","views/components/theme/createAppTheme.ts","views/components/theme/index.tsx","index.tsx","workers/eventAnalysis.worker.ts"],"names":["module","exports","Worker","slice","createSlice","name","initialState","events","fetchEventsFailedMessage","fetchEventsUrl","activeEvents","selectedEvent","reducers","allEventsFetchRequest","state","action","update","$set","payload","allEventsFetchSuccess","allEventsFetchFail","activeEventsSet","eventSelected","allEventsSelector","analytics","activeEventsSelector","actions","reducer","analyticsReducer","rootReducer","combineReducers","getState","fetchAllAnalyticsEvents","url","axios","get","then","response","data","map","eventRaw","analyticsItem","date","Date","timestamp","title","moment","format","sort","first","second","fetchAnalyticsEventsSaga","call","result","put","console","error","rootSaga","takeEvery","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","configureStore","preloadedState","devTools","process","run","ThemeColors","useAppDispatch","useDispatch","EventsPanel","styled","div","EventLink","Link","withTheme","_","dispatch","allEvents","useSelector","event","i","onClick","eventSelectionHandle","component","variant","rel","drawingActiveEvents","canvas","videoResolution","playerSize","ctx","getContext","lineWidth","strokeStyle","rectZone","zone","relativeLeft","left","width","relativeTop","top","height","relativeWidth","relativeHeight","strokeRect","VideoEventsLayerContainer","Grid","StyledCanvas","EventsVisualLayer","forwardRef","props","ref","useImperativeHandle","initialize","useRef","useState","player","setState","a","canvasObj","current","setAttribute","clearRect","cleanUp","length","playerHeightStr","playerWidthStr","playerHeight","substring","playerWidth","VIDEO_STREAM_URL","extractVideoResolution","Promise","resolve","reject","video","document","createElement","onloadedmetadata","videoWidth","videoHeight","src","EventAnalysis","onEnded","onPause","onPlay","onSeek","play","pause","ended","sec","seek","activeEventsCallback","eventIds","filter","e","includes","id","initializeAnalysis","Comlink","startAnalyze","Fragment","PlayerManagement","shiftSec","seekTo","PlayerContainer","playerManagement","analyticsEventsLayer","eventAnalysis","useEffect","resolution","playerObj","config","file","attributes","onContextMenu","preventDefault","disablepictureinpicture","controlsList","pip","controls","playing","sek","themeColor","key","keys","path","getTheme","Root","green","RootGrid","SectionGrid","RootPaper","Paper","blue","container","spacing","item","xs","Typography","GlobalStyle","createGlobalStyle","normalize","defaultAppThemeValues","app","colors","main","options","theme","createMuiTheme","Theme","children","StylesProvider","injectFirst","ReactDOM","render","CssBaseline","fallback","getElementById","wrap","__esModule"],"mappings":"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","file":"static/js/main.03fea7a4.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e15fb2c74a5d5a53888c.worker.js\");\n};","import {createSlice, PayloadAction, createEntityAdapter, Selector} from \"@reduxjs/toolkit\";\r\nimport {ApplicationState} from \"../store\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport interface AnalyticEventBase {\r\n    id: number,\r\n    timestamp: number,\r\n    duration: number,\r\n}\r\n\r\nexport interface AnalyticEvent extends AnalyticEventBase{\r\n    title: string,\r\n    zone: {\r\n        height: number,\r\n        left: number,\r\n        top: number,\r\n        width: number\r\n    }\r\n}\r\n\r\nexport interface AnalyticState {\r\n    events: AnalyticEvent[],\r\n    fetchEventsFailedMessage: string | null,\r\n    fetchEventsUrl: string,\r\n    activeEvents: AnalyticEvent[],\r\n    selectedEvent: AnalyticEvent | null\r\n}\r\n\r\nconst defaultState: AnalyticState = {\r\n    events: [],\r\n    fetchEventsFailedMessage: null,\r\n    fetchEventsUrl: \"http://www.mocky.io/v2/5e60c5f53300005fcc97bbdd\",\r\n    activeEvents: [],\r\n    selectedEvent: null\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: \"analytics\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        allEventsFetchRequest: (state: AnalyticState, action: PayloadAction<string>) =>\r\n            update(state, {\r\n                fetchEventsUrl: {$set: action.payload},\r\n            }),\r\n        allEventsFetchSuccess: (state: AnalyticState, action: PayloadAction<AnalyticEvent[]>) =>\r\n            update(state, {\r\n                events: {$set: action.payload},\r\n                fetchEventsFailedMessage: {$set: null}\r\n            }),\r\n        allEventsFetchFail: (state: AnalyticState, action: PayloadAction<string>) =>\r\n            update(state, {\r\n                fetchEventsFailedMessage: {$set: action.payload}\r\n            }),\r\n        activeEventsSet: (state: AnalyticState, action: PayloadAction<AnalyticEvent[]>) =>\r\n            update(state, {\r\n                activeEvents: {$set: action.payload}\r\n            }),\r\n        eventSelected: (state: AnalyticState, action: PayloadAction<AnalyticEvent | null>) =>\r\n            update(state, {\r\n                selectedEvent: {$set: action.payload}\r\n            })\r\n    }\r\n});\r\n\r\nexport const allEventsSelector: Selector<ApplicationState, AnalyticEvent[]> =\r\n    (state: ApplicationState) => state.analytics.events;\r\n\r\nexport const activeEventsSelector: Selector<ApplicationState, AnalyticEvent[]> =\r\n    (state: ApplicationState) => state.analytics.activeEvents;\r\n\r\nexport const eventSelectedSelector: Selector<ApplicationState, AnalyticEvent | null> =\r\n    (state: ApplicationState) => state.analytics.selectedEvent;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {\r\n    allEventsFetchSuccess,\r\n    allEventsFetchFail,\r\n    activeEventsSet,\r\n    allEventsFetchRequest,\r\n    eventSelected\r\n} = actions;\r\nconst analyticsReducer = reducer\r\nexport default analyticsReducer","import {combineReducers} from 'redux'\r\nimport analyticsReducer from \"./analytics/analyticsSlice\";\r\n\r\nconst rootReducer = () => {\r\n    return combineReducers({\r\n        analytics: analyticsReducer,\r\n    });\r\n};\r\n\r\nexport default rootReducer","const getState = () => {\r\n    return {};\r\n}\r\n\r\nexport default getState","import {AnalyticEvent} from \"../store/analytics/analyticsSlice\";\r\nimport axios from 'axios';\r\nimport moment from \"moment/moment\";\r\n\r\nconst fetchAllAnalyticsEvents = (url: string) => {\r\n    return axios\r\n        .get(url)\r\n        .then(response => {\r\n            const analyticEvents: AnalyticEvent[] = response\r\n                .data\r\n                .map((eventRaw: any) => {\r\n                    const analyticsItem = <AnalyticEvent>eventRaw\r\n                    const date = new Date(analyticsItem.timestamp)\r\n                    analyticsItem.title = moment(date).format(\"mm:ss:SSS\")\r\n                    return analyticsItem\r\n                })\r\n                .sort((first: AnalyticEvent, second: AnalyticEvent) => {\r\n                    return first.timestamp - second.timestamp;\r\n                })\r\n\r\n            return analyticEvents\r\n        })\r\n}\r\n\r\n// @ts-ignore\r\nexport default fetchAllAnalyticsEvents","import {put} from \"redux-saga/effects\";\r\nimport {call, all} from \"typed-redux-saga\";\r\nimport {allEventsFetchFail, allEventsFetchSuccess, AnalyticEvent} from \"../analytics/analyticsSlice\";\r\nimport fetchAllAnalyticsEvents from \"../../services/fetchAllAnalyticsEvents\";\r\n\r\nexport function* fetchAnalyticsEventsSaga(action: { payload: string; }) {\r\n    try {\r\n        let result = yield call(fetchAllAnalyticsEvents, action.payload);\r\n        yield put(allEventsFetchSuccess(result));\r\n    } catch (e) {\r\n        console.error(e)\r\n        yield put(allEventsFetchFail(e));\r\n    }\r\n}\r\n","import {takeEvery} from 'redux-saga/effects'\r\nimport { allEventsFetchRequest } from '../analytics/analyticsSlice';\r\nimport {fetchAnalyticsEventsSaga} from \"./fetchAnalyticsEventsSaga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(allEventsFetchRequest, fetchAnalyticsEventsSaga);\r\n}","import rootReducer from './rootReducer'\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk';\r\nimport {useDispatch} from \"react-redux\";\r\nimport logger from 'redux-logger';\r\nimport getState from \"./getState\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from \"./sagas/root-saga\";\r\n\r\nconst devMode = process.env.NODE_ENV === 'development';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [...getDefaultMiddleware({ thunk: false }), sagaMiddleware];\r\n\r\nif (devMode) {\r\n    middleware.push(logger);\r\n}\r\n\r\nexport const composeEnhancers =\r\n    (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer(),\r\n    preloadedState: getState(),\r\n    middleware: middleware,\r\n    devTools: devMode\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type ApplicationState = ReturnType<typeof store.getState>;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();","export enum ThemeColors {\r\n    green,\r\n    blue,\r\n}","import styled from \"styled-components\";\r\nimport {Grid, Link} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const EventsPanel = styled.div`\r\n  margin: 12px;\r\n`\r\n\r\nexport const EventLink = styled(Link)`\r\n  cursor: pointer;\r\n`\r\n","import React from \"react\";\r\nimport {Link, Theme} from \"@material-ui/core\";\r\nimport {useAppDispatch} from \"../../../../store/store\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {allEventsSelector, AnalyticEvent, eventSelected} from \"../../../../store/analytics/analyticsSlice\";\r\nimport {EventLink, EventsPanel } from \"./style\";\r\n\r\nconst EventsListPanel: React.FC<{ theme: Theme }> = (_) => {\r\n    const dispatch = useAppDispatch()\r\n    const allEvents = useSelector(allEventsSelector)\r\n\r\n    const eventSelectionHandle = (event: AnalyticEvent) => {\r\n        dispatch(eventSelected(event))\r\n    }\r\n\r\n    // @ts-ignore\r\n    return (\r\n        <EventsPanel>\r\n            {\r\n                allEvents.map((event : AnalyticEvent, i) =>\r\n                    <EventLink onClick={() => eventSelectionHandle(event)}\r\n                        // @ts-ignore\r\n                          component=\"button\"\r\n                          variant=\"body2\"\r\n                          rel=\"noreferrer\">\r\n                        {event.title + \", \"}\r\n                    </EventLink>\r\n                )\r\n            }\r\n        </EventsPanel>\r\n    );\r\n}\r\nexport default withTheme(EventsListPanel);","import {AnalyticEvent} from \"../../../../../store/analytics/analyticsSlice\";\r\nimport VideoResolution from \"../../../../../types/VideoResolution\";\r\n\r\nconst drawingActiveEvents = (events: AnalyticEvent[],\r\n                             canvas: HTMLCanvasElement,\r\n                             videoResolution : VideoResolution,\r\n                             playerSize: { width: number, height: number }): void => {\r\n\r\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D\r\n    ctx.lineWidth = 3\r\n    ctx.strokeStyle = \"green\"\r\n\r\n    for (const activeEvent of events) {\r\n        const rectZone = activeEvent.zone;\r\n\r\n        const relativeLeft = rectZone.left /  videoResolution.width\r\n        const relativeTop = rectZone.top / videoResolution.height\r\n        const relativeWidth = rectZone.width /  videoResolution.width\r\n        const relativeHeight = rectZone.height / videoResolution.height\r\n\r\n        let left = relativeLeft * playerSize.width\r\n        let top = relativeTop * playerSize.height;\r\n        let width = relativeWidth * playerSize.width;\r\n        let height = relativeHeight * playerSize.height;\r\n\r\n        ctx.strokeRect(left, top, width, height)\r\n    }\r\n}\r\n\r\nexport default drawingActiveEvents","import styled from \"styled-components\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport const VideoEventsLayerContainer = styled(Grid)`\r\n  height: 360px;\r\n  width: 100%;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  top: 0;\r\n  left: 0\r\n`\r\n\r\nexport const StyledCanvas = styled.canvas`\r\n  height: 100%;\r\n  width: 100%;\r\n  outline: none;\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  touch-action: none;\r\n`","import {useSelector} from \"react-redux\";\r\nimport {activeEventsSelector, allEventsSelector, AnalyticEvent} from \"../../../../store/analytics/analyticsSlice\";\r\nimport React, {forwardRef, Ref, useEffect, useImperativeHandle, useRef, useState} from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {PlayerInitialization} from \"../../../../types/PlayerInitialized\";\r\nimport {ApplicationState} from \"../../../../store/store\";\r\nimport drawingActiveEvents from \"./code/drawEventRectangle\";\r\nimport VideoResolution from \"../../../../types/VideoResolution\";\r\nimport {StyledCanvas, VideoEventsLayerContainer} from \"./style\";\r\n\r\nconst EventsVisualLayer = forwardRef((props, ref: Ref<PlayerInitialization>) => {\r\n    useImperativeHandle(ref, () => ({initialize}))\r\n    const canvas = useRef<HTMLCanvasElement>(null)\r\n\r\n    const [state, setState] = useState<{ player: ReactPlayer | null, videoResolution: VideoResolution }>({\r\n        player: null,\r\n        videoResolution: {height: 0, width: 0}\r\n    })\r\n    const {player, videoResolution} = state\r\n\r\n    const activeEvents = useSelector(activeEventsSelector)\r\n\r\n    const initialize = async (player: ReactPlayer, videoResolution: VideoResolution) => {\r\n        setState({player, videoResolution})\r\n\r\n        const canvasObj = canvas.current as HTMLCanvasElement;\r\n        canvasObj.setAttribute('width', '640');\r\n        canvasObj.setAttribute('height', '360');\r\n    }\r\n\r\n    const cleanUp = (canvas: HTMLCanvasElement) => {\r\n        if (!canvas)\r\n            return\r\n\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n    }\r\n\r\n    if (activeEvents) {\r\n        const canvasObj = canvas.current as HTMLCanvasElement;\r\n        cleanUp(canvasObj)\r\n\r\n        if (activeEvents.length > 0) {\r\n            const reactPlayer = player as ReactPlayer\r\n            const props = reactPlayer.props\r\n            let playerHeightStr = props.height as string\r\n            let playerWidthStr = props.width as string\r\n\r\n            let playerHeight = +playerHeightStr.substring(0, playerHeightStr.length - 2)\r\n            let playerWidth = +playerWidthStr.substring(0, playerWidthStr.length - 2)\r\n\r\n\r\n            drawingActiveEvents(activeEvents,\r\n                canvasObj,\r\n                videoResolution,\r\n                {\r\n                    height: playerHeight,\r\n                    width: playerWidth,\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <VideoEventsLayerContainer>\r\n            <StyledCanvas ref={canvas}/>\r\n        </VideoEventsLayerContainer>\r\n    )\r\n})\r\n\r\nexport default EventsVisualLayer","export const VIDEO_STREAM_URL = 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4'\r\nexport const ANALYTICS_EVENTS_URL = 'http://www.mocky.io/v2/5e60c5f53300005fcc97bbdd'","import VideoResolution from \"../../../../../types/VideoResolution\";\r\n\r\nconst extractVideoResolution = (url : string): Promise<VideoResolution> => {\r\n    return new Promise<VideoResolution>(async (resolve, reject) => {\r\n\r\n        const video = document.createElement('video');\r\n        video.onloadedmetadata = () => {\r\n            resolve({\r\n                width : video.videoWidth,\r\n                height : video.videoHeight\r\n            })\r\n        }\r\n        video.src = url\r\n    });\r\n\r\n}\r\n\r\nexport default extractVideoResolution","import {useSelector} from \"react-redux\";\r\nimport {\r\n    activeEventsSet,\r\n    allEventsSelector,\r\n    AnalyticEventBase\r\n} from \"../../../../store/analytics/analyticsSlice\";\r\nimport React, {forwardRef, Ref, useImperativeHandle, useState} from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {PlayerManager} from \"../../../../types/PlayerManagement\";\r\nimport * as Comlink from \"comlink\";\r\n// @ts-ignore\r\nimport EventAnalysisService from 'comlink-loader!../../../../workers/eventAnalysis.worker';\r\nimport {ended, initializeAnalysis, pause, play, seek} from \"../../../../workers/eventAnalysis.worker\";\r\nimport {useAppDispatch} from \"../../../../store/store\";\r\n\r\nconst EventAnalysis = forwardRef((props, ref: Ref<PlayerManager>) => {\r\n    const allEvents = useSelector(allEventsSelector)\r\n    const dispatch = useAppDispatch()\r\n\r\n    useImperativeHandle(ref, () => ({initialize, onEnded, onPause, onPlay, onSeek}))\r\n\r\n    const [state, setState] = useState<{ player: ReactPlayer | null }>({player: null})\r\n    const {player} = state\r\n\r\n    const initialize = async (player: ReactPlayer) => {\r\n        setState({player})\r\n    }\r\n\r\n    const onPlay = async () => {\r\n        await play();\r\n    }\r\n\r\n    const onPause = async () => {\r\n        await pause();\r\n    }\r\n\r\n    const onEnded = async () => {\r\n        await ended();\r\n    }\r\n\r\n    const onSeek = async (sec: number) => {\r\n        await seek(sec);\r\n    }\r\n\r\n    const activeEventsCallback = (eventIds: number[]) => {\r\n        if (eventIds && eventIds.length > 0) {\r\n            const activeEvents = allEvents.filter(e => eventIds.includes(e.id))\r\n            dispatch(activeEventsSet(activeEvents))\r\n        } else { // no events\r\n            dispatch(activeEventsSet([]))\r\n        }\r\n    }\r\n\r\n    async function startAnalyze() {\r\n        const events = allEvents as AnalyticEventBase[]\r\n        await initializeAnalysis(events, Comlink.proxy(activeEventsCallback))\r\n    }\r\n\r\n    if (allEvents && allEvents.length !== 0) {\r\n        startAnalyze()\r\n    }\r\n\r\n    return (\r\n        <React.Fragment/>\r\n    );\r\n})\r\n\r\nexport default EventAnalysis","import {useSelector} from \"react-redux\";\r\nimport {AnalyticEvent, eventSelected} from \"../../../../store/analytics/analyticsSlice\";\r\nimport React, {forwardRef, Ref, useImperativeHandle, useState} from \"react\";\r\nimport {PlayerInitialization} from \"../../../../types/PlayerInitialized\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {ApplicationState, useAppDispatch} from \"../../../../store/store\";\r\n\r\nconst PlayerManagement = forwardRef((props, ref: Ref<PlayerInitialization>) => {\r\n    const selectedEvent: AnalyticEvent = useSelector<ApplicationState>(state => state.analytics.selectedEvent) as AnalyticEvent\r\n    const dispatch = useAppDispatch()\r\n    useImperativeHandle(ref, () => ({initialize}))\r\n\r\n    const [state, setState] = useState<{ player: ReactPlayer | null }>({player: null})\r\n    const {player} = state\r\n\r\n    const initialize = async (player: ReactPlayer) => {\r\n        setState({player})\r\n    }\r\n\r\n    if (player && selectedEvent) {\r\n        const timestamp = selectedEvent.timestamp;\r\n        const shiftSec = timestamp / 1000;\r\n        player.seekTo(shiftSec, 'seconds')\r\n\r\n        dispatch(eventSelected(null))\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment/>\r\n    );\r\n})\r\n\r\nexport default PlayerManagement","import styled from \"styled-components\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport const PlayerContainer = styled.div`\r\n  position: relative;\r\n`","import React, {useEffect, useRef} from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport ReactPlayer, {ReactPlayerProps} from \"react-player\";\r\nimport {withTheme} from \"styled-components\";\r\nimport EventsVisualLayer from \"../eventsVisualLayer\";\r\nimport {PlayerInitialization} from \"../../../../types/PlayerInitialized\";\r\nimport {VIDEO_STREAM_URL} from \"../../../../const/url\";\r\nimport extractVideoResolution from \"../eventsVisualLayer/code/extractVideoResolution\";\r\nimport EventsAnalysis from \"../eventAnalysis\";\r\nimport PlayerManagement from \"../playerManagement\";\r\nimport {PlayerManager} from \"../../../../types/PlayerManagement\";\r\nimport { PlayerContainer } from \"./style\";\r\n\r\nconst Player: React.FC<{ theme: Theme }> = (_) => {\r\n    const player = useRef<ReactPlayer>(null)\r\n    const playerManagement = useRef<PlayerInitialization>(null)\r\n    const analyticsEventsLayer = useRef<PlayerInitialization>(null)\r\n    const eventAnalysis = useRef<PlayerManager>(null)\r\n\r\n    useEffect(() => {\r\n        const initialize = async () => {\r\n            const resolution = await extractVideoResolution(VIDEO_STREAM_URL)\r\n            const playerObj = player.current;\r\n\r\n            if (playerObj) {\r\n                if (playerManagement.current)\r\n                    playerManagement.current.initialize(playerObj, resolution)\r\n\r\n                if (analyticsEventsLayer.current)\r\n                    analyticsEventsLayer.current.initialize(playerObj, resolution)\r\n\r\n                if (eventAnalysis.current)\r\n                    eventAnalysis.current.initialize(playerObj, resolution)\r\n            }\r\n        };\r\n\r\n        initialize()\r\n    }, [])\r\n\r\n    const onPlay = () => {\r\n        if (eventAnalysis.current)\r\n            eventAnalysis.current.onPlay()\r\n    }\r\n\r\n    const onPause = () => {\r\n        if (eventAnalysis.current)\r\n            eventAnalysis.current.onPause()\r\n    }\r\n\r\n    const onSeek = (sek: number) => {\r\n        if (eventAnalysis.current)\r\n            eventAnalysis.current.onSeek(sek)\r\n    }\r\n\r\n    const onEnded = () => {\r\n        if (eventAnalysis.current)\r\n            eventAnalysis.current.onEnded()\r\n    }\r\n\r\n\r\n    return (\r\n        <PlayerContainer>\r\n            <ReactPlayer\r\n                config={{\r\n                    file: {\r\n                        attributes: {\r\n                            // @ts-ignore\r\n                            onContextMenu: e => e.preventDefault(),\r\n                            disablepictureinpicture: 'true',\r\n                            controlsList: 'nodownload nofullscreen noremoteplayback'\r\n                        }\r\n                    }\r\n                }}\r\n                pip={false}\r\n                url={VIDEO_STREAM_URL}\r\n                controls={true}\r\n                playing={true}\r\n                onPlay={onPlay}\r\n                onPause={onPause}\r\n                onSeek={onSeek}\r\n                onEnded={onEnded}\r\n                ref={player}/>\r\n            <EventsAnalysis ref={eventAnalysis}/>\r\n            <PlayerManagement ref={playerManagement}/>\r\n            <EventsVisualLayer ref={analyticsEventsLayer}/>\r\n        </PlayerContainer>\r\n    );\r\n}\r\nexport default withTheme(Player);","import {path} from \"ramda\";\r\nimport {ThemeColors} from \"./ThemeColors\";\r\n\r\n// @ts-ignore\r\nexport const getTheme: string = (keys: any[] = []) =>\r\n// @ts-ignore\r\n    props => path(['theme', 'app', ...keys], props);\r\n// @ts-ignore\r\nexport const themeColor = (key: ThemeColors) => getTheme(['colors', \"main\", ThemeColors[key]]);\r\n","import styled from \"styled-components\";\r\nimport {Grid, Paper, Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport {themeColor} from \"../theme/themeAccessors\";\r\n\r\nexport const Root = styled.div<Theme>`\r\n  background: ${themeColor(ThemeColors.green)};\r\n  min-height: 100vh;\r\n  flex-grow: 1;\r\n  padding: 24px;\r\n`\r\n\r\nexport const RootGrid = styled(Grid)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n`\r\n\r\nexport const SectionGrid = styled(Grid)`\r\n  align-content: center;\r\n`\r\nexport const RootPaper = styled(Paper)`\r\n  padding: 16px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  color: ${themeColor(ThemeColors.blue)};\r\n  height: 390px;\r\n`\r\n\r\nexport const PlayerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`","import React, {useEffect, useRef} from 'react';\r\nimport {createStyles, Grid, makeStyles, Paper, Theme, Typography} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport ReactPlayer from 'react-player'\r\nimport {useAppDispatch} from \"../../../store/store\";\r\nimport {allEventsFetchRequest} from '../../../store/analytics/analyticsSlice';\r\nimport AnalyticsPanel from '../layout/eventsListPanel';\r\nimport Player from \"../layout/player\";\r\nimport {ANALYTICS_EVENTS_URL} from \"../../../const/url\";\r\nimport {PlayerContainer, Root, RootGrid, RootPaper, SectionGrid} from './style';\r\n\r\nconst App: React.FC<{ theme: Theme }> = (_) => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(allEventsFetchRequest(ANALYTICS_EVENTS_URL))\r\n    })\r\n\r\n    return (\r\n        // @ts-ignore\r\n        <Root>\r\n            <RootGrid container spacing={3}>\r\n                <SectionGrid item xs={6}>\r\n                    <RootPaper>\r\n                        <Typography variant=\"h5\">\r\n                            Analytics events\r\n                        </Typography>\r\n                        <AnalyticsPanel/>\r\n                    </RootPaper>\r\n                </SectionGrid>\r\n                <SectionGrid item xs={6}>\r\n                    <RootPaper>\r\n                        <PlayerContainer>\r\n                            <Player/>\r\n                        </PlayerContainer>\r\n                    </RootPaper>\r\n                </SectionGrid>\r\n            </RootGrid>\r\n        </Root>\r\n    );\r\n}\r\nexport default withTheme(App);","import {createGlobalStyle} from 'styled-components'\r\nimport {normalize} from 'styled-normalize'\r\n\r\n// noinspection Stylelint\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize};\r\n  \r\n   html, body {\r\n    padding: 0;\r\n    margin: 0;\r\n    height: 100%;\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    width: 100%;\r\n    font-family: 'Roboto', 'Segoe UI',sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow:hidden;\r\n    box-sizing: border-box;\r\n    *, *:before, *:after {\r\n    box-sizing: inherit;\r\n    touch-action: none;\r\n    -ms-touch-action: none;\r\n    }\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, monospace;\r\n  }\r\n`","export const defaultAppThemeValues = {\r\n    app: {\r\n        colors: {\r\n            main: {\r\n                green: \"#4fc775\",\r\n                blue: \"#1a508b\",\r\n            }\r\n        }\r\n    }\r\n};","import {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport createAppTheme from \"./createAppTheme\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\nconst theme: Theme = createAppTheme({\r\n    ...defaultAppThemeValues\r\n})\r\nexport default theme;","import {createMuiTheme, Theme, ThemeOptions} from \"@material-ui/core\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n    interface Theme {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    green: string,\r\n                    blue: string,\r\n                }\r\n            },\r\n        }\r\n    }\r\n\r\n    interface ThemeOptions {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    green: string,\r\n                    blue: string,\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default function createAppTheme(options: ThemeOptions) : Theme {\r\n    return createMuiTheme({\r\n        ...options,\r\n        ...defaultAppThemeValues\r\n    })\r\n}\r\n","import {MuiThemeProvider, StylesProvider} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\n// @ts-ignore\r\nconst Theme = ({children}) => (\r\n    <StylesProvider injectFirst>\r\n        <MuiThemeProvider theme={theme}>\r\n            <ThemeProvider theme={theme}>\r\n                {children}\r\n            </ThemeProvider>\r\n        </MuiThemeProvider>\r\n    </StylesProvider>\r\n);\r\n\r\nexport default Theme","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./views/components/app\";\nimport {GlobalStyle} from \"./globalStyle\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport Theme from \"./views/components/theme\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n            <GlobalStyle/>\n            <CssBaseline/>\n            <Theme>\n                <Suspense fallback=\"\">\n                    <App/>\n                </Suspense>\n            </Theme>\n    </Provider>,\n    document.getElementById('root')\n);","module.exports = require('comlink').wrap(require(\"!worker-loader?{}!C:/Users/nsaytarov/WebstormProjects/video_and_analytics/node_modules/comlink-loader/dist/comlink-worker-loader.js!C:\\\\Users\\\\nsaytarov\\\\WebstormProjects\\\\video_and_analytics\\\\node_modules\\\\react-scripts\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js??ref--5-oneOf-0-1!C:\\\\Users\\\\nsaytarov\\\\WebstormProjects\\\\video_and_analytics\\\\src\\\\workers\\\\eventAnalysis.worker.ts\")());module.exports.__esModule = true;"],"sourceRoot":""}